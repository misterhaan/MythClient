<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_tip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQMDAwxra2tuREREfTk5OVEYGBgvAgICGQAA
        AA0AAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAASEhIOGRkZLpoaGjTenp6/H19ff+bm5v+pqam9qGh
        oeSdnZ3IiYmJqF9fX3sDAwMQAAAAAAAAAAAAAAAARkZGIG5ubuy2trb/vb29/8HBwf+2trb/p6en/5SU
        lP+Ghob/goKC/4uLi/95eXn4Pz8/jBQUFEAAAAAJAAAAAF1dXX+FhYX/OTk5/zk5Of9GRkb/YGBg/3x8
        fP+cnJz/rq6u/729vf/BwcH/u7u7/6ysrP93d3f1NDQ0hgAAAAppaWmnaWlp/ycnJ/81NTX/Ojo6/z8/
        P/9ERET/SEhI/0xMTP9NTU3/UFBQ/1paWv+YmJj/1tbW/2tra/YbGxtJa2trqmZmZv8qKir/OTk5/z4+
        Pv9DQ0P/SEhI/0xMTP9OTk7/T09P/09PT/9OTk7/Tk5O/8TExP9+fn7/R0dHjGtra6tmZmb/LCws/zs7
        O/9AQED/RkZG/0tLS/9PT0//UVFR/1FRUf9RUVH/UFBQ/01NTf+dnZ3/dnZ2/09PT5pra2utZmZm/yws
        LP87Ozv/QUFB/0dHR/9MTEz/UFBQ/1FRUf9SUlL/UVFR/1FRUf9OTk7/nJyc/3V1df9PT0+aampqr2Vl
        Zf8sLCz/Ozs7/0BAQP9GRkb/S0tL/09PT/9RUVH/UVFR/1FRUf9QUFD/TU1N/5ycnP92dnb/UFBQmmtr
        a7FlZWX/Kioq/zk5Of8+Pj7/Q0ND/0hISP9LS0v/TU1N/05OTv9OTk7/TExM/0pKSv+bm5v/dnZ2/1BQ
        UJpvb2+zZGRk/ycnJ/82Njb/Ojo6/z8/P/9ERET/R0dH/0pKSv9KSkr/SkpK/0lJSf9HR0f/mpqa/3Z2
        dv9QUFCZhoaGl29vb/8tLS3/MjIy/zU1Nf85OTn/Pj4+/0FBQf9CQkL/RERE/0NDQ/9DQ0P/QkJC/25u
        bv92dnb/YmJig7e3tzqkpKT6d3d3/1RUVP9XV1f/WVlZ/1tbW/9cXFz/XV1d/11dXf9dXV3/XFxc/1xc
        XP9xcXH/oKCg9GBgYC53d3cA29vbZ8rKyuzKysr+ysrK/svLy/7Ly8v+y8vL/svLy/7Kysr+ysrK/snJ
        yf7IyMj9zc3N38DAwFACAgIAAAAAAHh4eACpqakPk5OTH5OTkx+Tk5Mfk5OTH5OTkx+Tk5Mfk5OTH5OT
        kx+Tk5Mfk5OTHoqKiglYWFgAAAAAAP//AAD//wAA+/8AAMAfAACABwAAgAMAAIABAACAAQAAgAEAAIAB
        AACAAQAAgAEAAIABAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICCxwc
        HDoEBARBAAAAJAAAABkAAAATAAAADQAAAAYAAAACAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAUAAAAQAAAAGAYG
        BhlpaWmRhoaG409PT9RcXFy6TU1NnzIyMnkgICBgFBQUSgQEBDgAAAAqAAAAHgAAABMAAAALAAAABwAA
        AAUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAENDQ0TKysrWEZG
        RpxJSUmvOjo6om1tbfV9fX3/YmJi/5mZmf6srKz+tra2+7a2tvOtra3ol5eX1Xt7e75jY2OlQ0NDgyYm
        JmoWFhZTBwcHPQAAACkAAAAPAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSUlHVVV
        Va1ycnL1fX19/oCAgP6CgoL9gYGB/35+fv95eXn/fn5+/4GBgf+JiYn/lZWV/6CgoP+tra3/u7u7/8bG
        xv7Hx8f8vLy896mpqeyQkJDZV1dXrQQEBC0AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMj
        Iw9XV1e2bGxs/oaGhv++vr7/y8vL/7e3t/+ioqL/kpKS/4WFhf+CgoL/g4OD/4WFhf+Hh4f/h4eH/4SE
        hP+CgoL/fn5+/35+fv+Hh4f/lZWV/5SUlP9UVFToAwMDYgAAAC4AAAAbAAAACAAAAAEAAAAAAAAAAAAA
        AAALCwsBS0tLb2ZmZvyGhob/2NjY/729vf+lpaX/ysrK/+bm5v/s7Oz/7Ozs/+Tk5P/U1NT/wMDA/6mp
        qf+Xl5f/jIyM/4WFhf+FhYX/hoaG/4iIiP+Hh4f/goKC/3Z2dvxdXV3eSUlJwCIiIo0FBQVQAAAAHwAA
        AAQAAAAAAAAAACEhIQtcXFzScHBw/6Kiov94eHj/GRkZ/zo6Ov9DQ0P/S0tL/1ZWVv9nZ2f/jIyM/6Oj
        o/+6urr/3t7e/+zs7P/t7e3/6urq/93d3f/Ly8v/tbW1/5+fn/+QkJD/hoaG/4WFhf+Ghob/gICA/VRU
        VNgUFBSAAAAALAAAAAQAAAAAPT09LWZmZvN6enr/iIiI/ycnJ/8qKir/MzMz/zU1Nf85OTn/Pz8//0VF
        Rf9ISEj/SkpK/0pKSv9PT0//WVlZ/2NjY/9/f3//nJyc/66urv/Kysr/5ubm/+rq6v/p6en/4eHh/8XF
        xf+MjIz/d3d3/19fX+sWFhaBAAAAIwAAAAFTU1NRbGxs+nl5ef9gYGD/Gxsb/zExMf80NDT/NTU1/zg4
        OP86Ojr/PT09/z4+Pv9BQUH/RERE/0dHR/9KSkr/TExM/09PT/9PT0//Tk5O/09PT/9WVlb/X19f/21t
        bf+VlZX/2dnZ/+3t7f+YmJj/b29v/1BQUN4ICAhbAAAAC11dXVZwcHD6dnZ2/1VVVf8dHR3/MjIy/zU1
        Nf83Nzf/Ojo6/z09Pf8/Pz//QUFB/0RERP9GRkb/R0dH/0hISP9KSkr/S0tL/0xMTP9MTEz/TU1N/01N
        Tf9OTk7/T09P/1JSUv+goKD/+Pj4/9ra2v+BgYH/Z2dn/C0tLZ4AAAAeXV1dWHFxcft2dnb/VFRU/x4e
        Hv80NDT/Nzc3/zo6Ov87Ozv/Pj4+/0FBQf9ERET/RkZG/0dHR/9KSkr/S0tL/0xMTP9NTU3/Tk5O/05O
        Tv9OTk7/Tk5O/01NTf9MTEz/S0tL/1RUVP/Ly8v/6Ojo/5KSkv9tbW3/T09P0AQEBDVbW1tZcXFx+3Z2
        dv9VVVX/ICAg/zY2Nv85OTn/Ojo6/z09Pf8/Pz//Q0ND/0ZGRv9HR0f/SkpK/0xMTP9NTU3/T09P/1BQ
        UP9QUFD/UVFR/1FRUf9QUFD/T09P/05OTv9NTU3/SkpK/3x8fP/j4+P/g4OD/3V1df9gYGDnCwsLRVpa
        WltxcXH7dnZ2/1VVVf8gICD/Nzc3/zo6Ov87Ozv/Pj4+/0BAQP9FRUX/R0dH/0hISP9LS0v/Tk5O/09P
        T/9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UFBQ/05OTv9MTEz/YmJi/9nZ2f90dHT/d3d3/2Rk
        ZOsMDAxJWlpaXHFxcft3d3f/VVVV/yEhIf84ODj/Ojo6/zw8PP8+Pj7/QkJC/0ZGRv9HR0f/SkpK/01N
        Tf9PT0//UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9QUFD/T09P/01NTf9hYWH/19fX/3Nz
        c/93d3f/ZGRk6wwMDElaWlpecXFx/Hd3d/9VVVX/ISEh/zg4OP86Ojr/PT09/z8/P/9CQkL/RkZG/0hI
        SP9LS0v/Tk5O/1BQUP9RUVH/UVFR/1FRUf9SUlL/UlJS/1FRUf9RUVH/UVFR/1BQUP9QUFD/TU1N/2Fh
        Yf/X19f/c3Nz/3d3d/9kZGTrDAwMSVpaWmBycnL8d3d3/1VVVf8hISH/ODg4/zo6Ov89PT3/Pz8//0JC
        Qv9GRkb/SEhI/0tLS/9NTU3/UFBQ/1FRUf9RUVH/UVFR/1JSUv9SUlL/UVFR/1FRUf9RUVH/UFBQ/09P
        T/9NTU3/YWFh/9fX1/90dHT/d3d3/2RkZOsMDAxJWlpaYXJycvx2dnb/VFRU/yAgIP84ODj/Ojo6/zw8
        PP8/Pz//QkJC/0ZGRv9HR0f/SkpK/01NTf9PT0//UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FR
        Uf9QUFD/Tk5O/0xMTP9hYWH/19fX/3R0dP93d3f/ZGRk6wwMDElRUVFjcnJy/HZ2dv9UVFT/ICAg/zc3
        N/86Ojr/Ozs7/z4+Pv9BQUH/RUVF/0dHR/9JSUn/S0tL/05OTv9PT0//UVFR/1FRUf9RUVH/UVFR/1FR
        Uf9RUVH/UFBQ/05OTv9NTU3/S0tL/2FhYf/X19f/dHR0/3h4eP9lZWXrDAwMSVRUVGVzc3P8d3d3/1NT
        U/8fHx//NjY2/zk5Of86Ojr/PT09/z8/P/9DQ0P/RkZG/0dHR/9KSkr/TExM/01NTf9OTk7/T09P/1BQ
        UP9QUFD/T09P/09PT/9OTk7/TU1N/0tLS/9KSkr/YGBg/9fX1/90dHT/eHh4/2VlZesMDAxJXV1daHNz
        c/13d3f/U1NT/x4eHv81NTX/Nzc3/zo6Ov87Ozv/Pj4+/0FBQf9ERET/RkZG/0dHR/9JSUn/S0tL/0xM
        TP9NTU3/TU1N/01NTf9NTU3/TExM/0xMTP9LS0v/SkpK/0hISP9fX1//19fX/3R0dP95eXn/ZWVl6wwM
        DElgYGBqc3Nz/Xd3d/9SUlL/Gxsb/zMzM/82Njb/ODg4/zo6Ov89PT3/Pz8//0JCQv9ERET/RkZG/0hI
        SP9ISEj/S0tL/0tLS/9LS0v/S0tL/0tLS/9LS0v/S0tL/0pKSv9JSUn/RkZG/19fX//X19f/dHR0/3l5
        ef9lZWXrDAwMSWFhYWh2dnb9dXV1/1BQUP8aGhr/MjIy/zQ0NP82Njb/ODg4/zo6Ov89PT3/Pz8//0JC
        Qv9ERET/RUVF/0dHR/9ISEj/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SEhI/0dHR/9GRkb/XV1d/9fX
        1/90dHT/eXl5/2VlZeoNDQ1GZmZmVYODg/p2dnb/Wlpa/yIiIv8rKyv/NDQ0/zQ0NP82Njb/OTk5/zs7
        O/89PT3/Pz8//0FBQf9CQkL/RERE/0RERP9FRUX/RkZG/0ZGRv9GRkb/RkZG/0ZGRv9FRUX/RUVF/0ND
        Q/9aWlr/q6ur/2xsbP97e3v/bGxs5g8PDzdcXFwem5ub7YCAgP9sbGz/RkZG/yEhIf8uLi7/MDAw/zIy
        Mv8zMzP/NjY2/zg4OP86Ojr/PDw8/z4+Pv8+Pj7/Pz8//0BAQP9BQUH/QUFB/0FBQf9BQUH/QUFB/0FB
        Qf9AQED/QEBA/09PT/9jY2P/ampq/4aGhv96enrPEBAQHkVFRQW+vr6roKCg/3p6ev9zc3P/Nzc3/xgY
        GP8bGxv/HBwc/x4eHv8gICD/ISEh/yMjI/8kJCT/JiYm/ycnJ/8oKCj/KCgo/ykpKf8qKir/Kioq/yoq
        Kv8qKir/Kioq/yoqKv8uLi7/R0dH/2xsbP98fHz/oqKi/XJycocCAgIKAAAAAK2trTfc3Nzqnp6e/5CQ
        kP+hoaH/kJCQ/4+Pj/+QkJD/kZGR/5GRkf+SkpL/kpKS/5KSkv+SkpL/kpKS/5KSkv+SkpL/kZGR/5GR
        kf+QkJD/j4+P/4+Pj/+Ojo7/jIyM/46Ojv+Ojo7/goKC/7CwsP+0tLTTPj4+JQAAAAEAAAAAd3d3Ac3N
        zWDo6Ojvvr6+/6Kiov+oqKj/qKio/6mpqf+pqan/qamp/6mpqf+pqan/qamp/6mpqf+pqan/qamp/6mp
        qf+pqan/qamp/6ioqP+np6f/pqam/6ampv+lpaX/n5+f/6Wlpf/U1NT/3Nzc2YSEhD4CAgICAAAAAAAA
        AAAAAAAAhISEA8bGxknk5OS/7+/v8u3t7f3s7Oz+7Ozs/uzs7P7s7Oz+7Ozs/uzs7P7s7Oz+7Ozs/uzs
        7P7s7Oz+7Ozs/uzs7P7s7Oz+7Ozs/uzs7P7s7Oz+7Ozs/uzs7P7v7+/66+vr5NbW1pyOjo4oGBgYAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAeHh4AJWVlQ2vr68uk5OTPZOTkz6Tk5M+k5OTPpOTkz6Tk5M+k5OTPpOT
        kz6Tk5M+k5OTPpOTkz6Tk5M+k5OTPpOTkz6Tk5M+k5OTPpOTkz6Tk5M+k5OTPpOTkzmQkJAhWVlZBFhY
        WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////n////wA///AAAf/gAAH/wAAAP8AA
        AA/AAAAHwAAAB8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAB+AAAAfwAAAP////////////////
</value>
  </data>
</root>